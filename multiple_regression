import numpy as np
import matplotlib.pyplot as plt
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error, r2_score
from mpl_toolkits.mplot3d import Axes3D


d_X, d_y = datasets.load_diabetes(return_X_y=True)
d_X = d_X[:, [0, 2]]  


d_X_train = d_X[:-20]
d_X_test = d_X[-20:]

d_y_train = d_y[:-20]
d_y_test = d_y[-20:]


model = linear_model.LinearRegression()
model.fit(d_X_train, d_y_train)


d_y_pred = model.predict(d_X_test)

print("Coefficients:", model.coef_)
print("Intercept:", model.intercept_)
print("Mean Squared Error:" % mean_squared_error(d_y_test, d_y_pred))
print("R² Score: %.2f" % r2_score(d_y_test, d_y_pred))


x_age = d_X_test[:, 0]  
y_bmi = d_X_test[:, 1]  

plt.style.use('default')
fig = plt.figure(figsize=(12, 4))
ax1 = fig.add_subplot(131, projection='3d')
ax2 = fig.add_subplot(132, projection='3d')
ax3 = fig.add_subplot(133, projection='3d')
axes = [ax1, ax2, ax3]
for ax in axes:
    ax.scatter(x_age, y_bmi, d_y_test, color='blue', label='Actual', alpha=0.6)
    ax.plot(x_age, y_bmi, d_y_pred, color='red', marker='o', linestyle='none', label='Predicted', alpha=0.6)
    ax.set_xlabel('Age')
    ax.set_ylabel('BMI')
    ax.set_zlabel('Disease Progression')
    ax.legend()
    ax.grid(True)
ax1.view_init(elev=28, azim=120)
ax2.view_init(elev=10, azim=70)
ax3.view_init(elev=60, azim=160)
fig.suptitle(f'3D Regression Plot (R² Score: {r2_score(diabetes_y_test, diabetes_y_pred):.2f})', fontsize=16)
fig.tight_layout()
plt.show()
